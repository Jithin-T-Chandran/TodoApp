{"version":3,"sources":["./src/app/components/todos/todos.component.ts","./src/app/components/todos/todos.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Todo } from './../../models/Todo';\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.css']\n})\nexport class TodosComponent implements OnInit {\n  todos:Todo[]= []; \n\n  inputTodo:string = \"\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.todos = [\n      {\n        content: 'First todo',\n        completed: false\n      },\n      {\n        content: 'Second todo',\n        completed: false\n      }\n    ]\n  }\n\n  toggleDone (id:number) {\n    this.todos.map((v, i) => {\n      if (i == id) v.completed = !v.completed;\n\n      return v;\n    })\n  }\n\n  deleteTodo (id:number) {\n    this.todos = this.todos.filter((v, i) => i !== id);\n  }\n\n  addTodo () {\n    this.todos.push({\n      content: this.inputTodo,\n      completed: false\n    });\n\n    this.inputTodo = \"\";\n  }\n\n}\n","<div class=\"todos\">\n\t<form (submit)=\"addTodo()\">\n\t\t<input \n\t\t\ttype=\"text\"\n\t\t\tname=\"inputTodo\"\n\t\t\tplaceholder=\"Enter todo...\"\n\t\t\tclass=\"todo-input\"\n\t\t\t[(ngModel)]=\"inputTodo\"\n\t\t/>\n\t\t<input type=\"submit\" value=\"Add Todo\" class=\"todo-submit\" />\n\t</form>\n\t<div *ngFor=\"let todo of todos; let i = index;\" class=\"todo {{ (todo.completed ? 'done' : '') }}\">\n\t\t<div class=\"id\">{{ i }}</div>\n\t\t<div class=\"content\" (click)=\"toggleDone(i)\">{{ todo.content }}</div>\n\t\t<button class=\"delete\" (click)=\"deleteTodo(i)\">Remove</button>\n\t</div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TodoApp';\n}\n","<div class=\"app\">\n  <header>\n    <h1>Todo List</h1>\n  </header>\n  <app-todos></app-todos>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodosComponent } from './components/todos/todos.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodosComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}